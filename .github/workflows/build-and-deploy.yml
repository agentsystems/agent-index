name: Build and Deploy Agent Index

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  validate:
    name: Validate YAML Files
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml jsonschema

      - name: Get changed developer folders (PR only)
        id: changed
        if: github.event_name == 'pull_request'
        run: |
          # Get list of changed files
          CHANGED_FILES=$(gh pr view ${{ github.event.pull_request.number }} --json files -q '.files[].path' | grep '^developers/' || true)

          # Extract unique developer folder names
          DEVELOPER_FOLDERS=$(echo "$CHANGED_FILES" | cut -d'/' -f2 | sort -u | tr '\n' ' ')

          echo "folders=$DEVELOPER_FOLDERS" >> $GITHUB_OUTPUT
          echo "üìù Changed developer folders: $DEVELOPER_FOLDERS"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Validate changed developers only (PR)
        if: github.event_name == 'pull_request' && steps.changed.outputs.folders != ''
        run: |
          for folder in ${{ steps.changed.outputs.folders }}; do
            echo "üîç Validating developers/$folder"
            python scripts/validate.py developers/$folder
          done

      - name: Validate all (Push to main)
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        run: python scripts/validate.py all

  build:
    name: Build JSON Index
    runs-on: ubuntu-latest
    needs: validate
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml jsonschema

      - name: Build index
        run: python scripts/build-index.py

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 10

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
